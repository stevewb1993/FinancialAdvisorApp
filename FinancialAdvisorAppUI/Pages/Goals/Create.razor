@page "/goals/create/"

@inject NavigationManager _navManager
@inject IGoalRepository _goalRepo
@inject IUserDetailRepository _userDetailRepo
@inject HttpClient _client
@inject ApiAuthenticationStateProvider _authentication
@inject IToastService _toastService

<h3 class="card-title">Your goals</h3>
<hr />
<br />

@if (!isExistsUserDetails)
{
<p>
    Please provide some additional information about yourself so we can create suitable goals for you
</p>


<EditForm Model="userDetailModel" OnValidSubmit="CreateUserDetail">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="DateOfBirth">Date ff Birth</label>
        <InputDate @bind-Value="userDetailModel.DateOfBirth" class="form-control" id="DateOfBirth" />
    </div>
    <div class="form-group">
        <label for="HighestEducation">Highest Level of Education</label>
        <InputText @bind-Value="userDetailModel.HighestEducation" class="form-control" id="HighestEducation" />
    </div>
    <div class="form-group">
        <label for="RetirementAge">Target Retirement Age</label>
        <InputNumber @bind-Value="userDetailModel.RetirementAge" class="form-control" id="RetirementAge" />
    </div>
    <button class="btn btn-primary" type="submit">
        <span class="oi oi-pencil"></span>
        Create Author
    </button>
</EditForm>
}



@code 
{ 
    private IList<Goal> goalModel;
    private UserDetail userDetailModel = new UserDetail();

    private bool isExistsUserDetails;
    private bool isExistsGoals;



    protected async override Task OnInitializedAsync()
    {

        var auth = await _authentication.GetAuthenticationStateAsync();
        string userId = auth.User.FindFirst(AppConstants.UserId).Value;
        Console.WriteLine(userId);

        //Check user details
        isExistsUserDetails = await _userDetailRepo.CheckUserHasRecords(Endpoints.UserDetailsEndpoint, userId);

        //Check goals
        isExistsGoals = await _goalRepo.CheckUserHasRecords(Endpoints.GoalsEndpoint, userId);

        //goalModel = await _goalRepo.GetByUserId(Endpoints.GoalsEndpoint, userId);

        //userDetailModel = await _userDetailRepo.GetById(Endpoints.UserDetailsEndpoint, userId);

    }


    private async void CreateUserDetail()
    {

        var auth = await _authentication.GetAuthenticationStateAsync();
        userDetailModel.Id = auth.User.FindFirst(AppConstants.UserId).Value;
        bool isSuccess = await _userDetailRepo.Create(Endpoints.UserDetailsEndpoint, userDetailModel);
        if (isSuccess)
        {
            _toastService.ShowSuccess("Details submitted  successfully", "");
        }
    }

    private void createGoals()
    {
        _navManager.NavigateTo("/goals/create");
    } 
}
